/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/breakpoints.min.js":
/*!*****************************************!*\
  !*** ./resources/js/breakpoints.min.js ***!
  \*****************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

/* breakpoints.js v1.0 | @ajlkn | MIT licensed */
var breakpoints = function () {
  "use strict";

  function e(e) {
    t.init(e);
  }

  var t = {
    list: null,
    media: {},
    events: [],
    init: function init(e) {
      t.list = e, window.addEventListener("resize", t.poll), window.addEventListener("orientationchange", t.poll), window.addEventListener("load", t.poll), window.addEventListener("fullscreenchange", t.poll);
    },
    active: function active(e) {
      var n, a, s, i, r, d, c;

      if (!(e in t.media)) {
        if (">=" == e.substr(0, 2) ? (a = "gte", n = e.substr(2)) : "<=" == e.substr(0, 2) ? (a = "lte", n = e.substr(2)) : ">" == e.substr(0, 1) ? (a = "gt", n = e.substr(1)) : "<" == e.substr(0, 1) ? (a = "lt", n = e.substr(1)) : "!" == e.substr(0, 1) ? (a = "not", n = e.substr(1)) : (a = "eq", n = e), n && n in t.list) if (i = t.list[n], Array.isArray(i)) {
          if (r = parseInt(i[0]), d = parseInt(i[1]), isNaN(r)) {
            if (isNaN(d)) return;
            c = i[1].substr(String(d).length);
          } else c = i[0].substr(String(r).length);

          if (isNaN(r)) switch (a) {
            case "gte":
              s = "screen";
              break;

            case "lte":
              s = "screen and (max-width: " + d + c + ")";
              break;

            case "gt":
              s = "screen and (min-width: " + (d + 1) + c + ")";
              break;

            case "lt":
              s = "screen and (max-width: -1px)";
              break;

            case "not":
              s = "screen and (min-width: " + (d + 1) + c + ")";
              break;

            default:
              s = "screen and (max-width: " + d + c + ")";
          } else if (isNaN(d)) switch (a) {
            case "gte":
              s = "screen and (min-width: " + r + c + ")";
              break;

            case "lte":
              s = "screen";
              break;

            case "gt":
              s = "screen and (max-width: -1px)";
              break;

            case "lt":
              s = "screen and (max-width: " + (r - 1) + c + ")";
              break;

            case "not":
              s = "screen and (max-width: " + (r - 1) + c + ")";
              break;

            default:
              s = "screen and (min-width: " + r + c + ")";
          } else switch (a) {
            case "gte":
              s = "screen and (min-width: " + r + c + ")";
              break;

            case "lte":
              s = "screen and (max-width: " + d + c + ")";
              break;

            case "gt":
              s = "screen and (min-width: " + (d + 1) + c + ")";
              break;

            case "lt":
              s = "screen and (max-width: " + (r - 1) + c + ")";
              break;

            case "not":
              s = "screen and (max-width: " + (r - 1) + c + "), screen and (min-width: " + (d + 1) + c + ")";
              break;

            default:
              s = "screen and (min-width: " + r + c + ") and (max-width: " + d + c + ")";
          }
        } else s = "(" == i.charAt(0) ? "screen and " + i : i;
        t.media[e] = !!s && s;
      }

      return t.media[e] !== !1 && window.matchMedia(t.media[e]).matches;
    },
    on: function on(e, n) {
      t.events.push({
        query: e,
        handler: n,
        state: !1
      }), t.active(e) && n();
    },
    poll: function poll() {
      var e, n;

      for (e = 0; e < t.events.length; e++) {
        n = t.events[e], t.active(n.query) ? n.state || (n.state = !0, n.handler()) : n.state && (n.state = !1);
      }
    }
  };
  return e._ = t, e.on = function (e, n) {
    t.on(e, n);
  }, e.active = function (e) {
    return t.active(e);
  }, e;
}();

!function (e, t) {
   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0;
}(this, function () {
  return breakpoints;
});

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/breakpoints.min.js");
/******/ 	
/******/ })()
;